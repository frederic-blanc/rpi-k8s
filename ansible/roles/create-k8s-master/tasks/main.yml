---
- name: Ensures files/generated dir exists on controller
  file: 
      path:  files/generated
      state: directory
  become: true
  delegate_to: localhost
  
- name: Generate local private key (2048 bits, RSA)
  openssl_privatekey:
    path: "files/generated/{{ domain_name }}.key"
    type: RSA
    size: 2048
  delegate_to: localhost
  
- name: Generate local csr
  openssl_csr:
    path: "files/generated/{{ domain_name }}.csr"
    privatekey_path: files/generated/{{ domain_name }}.key
    common_name: "{{ certificate_authority.CN }}"
    state_or_province_name: "{{ certificate_authority.ST }}"
    organization_name: "{{ certificate_authority.O }}"
    organizational_unit_name: "{{ certificate_authority.OU }}"
    useCommonNameForSAN: false
    basicConstraints:
    - CA:TRUE
  delegate_to: localhost
  
- name: Generate local Self Signed Certificate Authority
  openssl_certificate:
    path: "files/generated/{{ domain_name }}.crt"
    csr_path: files/generated/{{ domain_name }}.csr
    privatekey_path: files/generated/{{ domain_name }}.key
    provider: selfsigned
    selfsigned_digest: sha256
  delegate_to: localhost
  
- name: Ensures /etc/kubernetes/pki dir exists
  file: 
    path:  /etc/kubernetes/pki
    state: directory
    owner: root
    group: root
    mode:  '0755'
  become: true
  
# from here the role is not idempotent
- name: Reset the Kubernetes cluster using kubeadm
  shell:  kubeadm reset -f
  become: true
  
- name: Copy key to /etc/kubernetes/pki
  copy: 
    src:  "files/generated/{{ domain_name }}.key"
    dest: /etc/kubernetes/pki/ca.key
    owner: root
    group: root
    mode: '0400'
  become: true
  
- name: Copy certificate to /etc/kubernetes/pki
  copy: 
    src:  "files/generated/{{ domain_name }}.crt"
    dest: /etc/kubernetes/pki/ca.crt
    owner: root
    group: root
    mode: '0444'
  become: true
  
- name: kubernetes with flannel network plugin installation
  block: 
  - name: download latest flannel pod network version
    get_url:
      url:  "https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
      dest: files/generated/k8s-flannel.yaml
      force: true
    delegate_to: localhost
    
  - name: Ensures /root/k8s dir exists on controller
    file: 
        path:  /root/k8s
        state: directory
        owner: root
        group: root
        mode:  '0755'
    become: true
    
  - name: copy flannel file on host
    copy:
      src:   files/generated/k8s-flannel.yaml
      dest:  /root/k8s/k8s-flannel.yaml
      owner: root
      group: root
      mode: '0644'
    
  - name: check if flannel interface exist
    shell: ifconfig | grep 'flannel.1:'
    register: flannel_interface
    changed_when: false
    failed_when: false
    
  - name: remove old flannel.1 interface
    shell: ifconfig 'flannel.1' down
    when: flannel_interface.rc == 0
    
  - name: Initialize the Kubernetes cluster using kubeadm
    shell: kubeadm init --apiserver-advertise-address="{{ ansible_default_ipv4.address }}" --node-name "{{ hostname }}" --cert-dir /etc/kubernetes/pki --pod-network-cidr="10.244.0.0/16"
    
  - name: Install flannel pod network
    shell: kubectl apply -f '/root/k8s/k8s-flannel.yaml' --kubeconfig /etc/kubernetes/admin.conf
    
  become: true
  when: k8s.network_plugin == 'flannel'

- name: kubernetes with weave network plugin installation
  block:
  - name: get kubectl version
    shell:  kubectl version | base64 | tr -d '\n'
    register: kubectl_version
    changed_when: False
    
  - name: download latest weave pod network version
    get_url:
      url:  "https://cloud.weave.works/k8s/net?k8s-version={{ kubectl_version.stdout }}&env.WEAVE_MTU=8912"
      dest: files/generated/k8s-weave.yaml
      force: true
    delegate_to: localhost
    
  - name: Ensures /root/k8s dir exists on controller
    file: 
        path:  /root/k8s
        state: directory
        owner: root
        group: root
        mode:  '0755'
    
  - name: copy weave file on host
    copy:
      src:   files/generated/k8s-weave.yaml
      dest:  /root/k8s/k8s-weave.yaml
      owner: root
      group: root
      mode: '0644'
    
  - name: Initialize the Kubernetes cluster using kubeadm
    shell: kubeadm init --apiserver-advertise-address="{{ ansible_default_ipv4.address }}" --node-name "{{ hostname }}" --hostname-override "{{ fqdn }}" --cert-dir /etc/kubernetes/pki
    
  - name: Install weave pod network
    shell: kubectl apply -f '/root/k8s-weave.yaml' --kubeconfig /etc/kubernetes/admin.conf
    
  become: true
  when: k8s.network_plugin == 'weave'

- name: Ensures .kube dir exists for root
  file: 
    path:  /root/.kube
    state: directory
    owner: root
    group: root
    mode:  '0700'
  become: true
  
- name: copy kube config to root
  copy:
    src:  /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode:  '0400'
    remote_src: yes
  become: true
  
- name: Ensures .kube dir exists for users
  file: 
    path:  "/home/{{ item }}/.kube"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode:  '0700'
  with_items: "{{ work_users }}"
  become: true
  
- name: copy kube config to users
  copy:
    src:   /etc/kubernetes/admin.conf
    dest:  "/home/{{ item }}/.kube/config"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode:  '0400'
    remote_src: yes
  with_items: "{{ work_users }}"
  become: true
  
- name: Generate join command
  command:  kubeadm token create --print-join-command
  register: join_command
  become: true
  
- name: Copy join command to local file
  copy:
    content: "{{ join_command.stdout_lines[0] }}" 
    dest: "files/generated/local-join-k8s-cluster.sh"
  delegate_to: localhost
  