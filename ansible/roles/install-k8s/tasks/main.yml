---
# docker service must be started
- name: start service docker
  systemd:
    state: started
    name:  docker
  become: true
  
# Install k8s repository
- name: Install package to manage access to https repositories
  apt:
    name:  "{{ packages }}"
    state:  present
    update_cache: yes
    autoremove: yes
    force_apt_get: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - gnupg-agent
    - software-properties-common
  become: true
  
- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become: true
  
- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ {{ k8s.repository.version }} {{ k8s.repository.channel }}
    state: present
    filename: kubernetes.list
  become: true
  
# disable swap
- name: stop service dphys-swapfile
  systemd:
    state: stopped
    name:  dphys-swapfile
  become: true

- name: uninstall swap
  shell: dphys-swapfile swapoff && dphys-swapfile uninstall
  when:  ansible_swaptotal_mb > 0
  become: true
  
- name: disable service dphys-swapfile
  systemd:
    enabled: no
    name:  dphys-swapfile
  become: true
  
# install network tweak for debian
- name: Install network dependencies packages
  apt:
    name:  "{{ packages }}"
    state:  present
    update_cache: yes
    autoremove: yes
    force_apt_get: yes
  vars:
    packages:
    - conntrack
    - ebtables
    - ethtool
    - socat
  become: true
  
- name: use __tables-legacy (needed for the network plugin to work on debian:buster)
  alternatives:
    name: "{{ item }}"
    path: "/usr/sbin/{{ item }}-legacy"
  with_items:
  - "iptables"
  - "ip6tables"
  - "ebtables"
  register: __tables_legacy
  become: true
  
- name: set net.bridge.bridge-nf-call-iptables to 1 (needed for both flannel and weave network plugin)
  sysctl:
    name:  net.bridge.bridge-nf-call-iptables
    value: "1"
    state: present
  register: bridge_nf_call_iptables
  become: true
  
# reboot if needed
- name: reboot on change
  reboot:
  when: __tables_legacy.changed or bridge_nf_call_iptables.changed
  become: true
  
- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
    autoremove: yes
    force_apt_get: yes
  vars:
    packages:
      - cri-tools
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni
  notify:
  - kubelet status
  become: true
  
- name: Configure default kubelet ip
  lineinfile:
    path:   "/etc/default/kubelet"
    line:   "KUBELET_EXTRA_ARGS='--node-ip={{ ansible_default_ipv4.address }} --cgroup-driver={{ docker.cgroupdriver }}'"
    create: yes
  register: kubelet_default
  become: true
  
- name: restart service kubelet
  systemd:
    state: restarted
    daemon_reload: yes
    name:  kubelet
  when: kubelet_default.changed
  notify:
  - kubelet status
  become: true
  
