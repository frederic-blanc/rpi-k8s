---
- name: set ceph_mon fact
  set_fact:
    ceph_mon:               "{{ lookup('file', 'generated/ceph_mon_dump.json') | from_json }}"
  
- name: set ceph_cephfs_client_key fact
  set_fact:
    ceph_cephfs_client_key: "{{ lookup('file', 'generated/ceph_cephfs_client.key') }}"
  become:           true
  
- name: set ceph_cephfs_client_key fact
  set_fact:
    ceph_cephfs_admin_key:  "{{ lookup('file', 'generated/ceph_cephfs_admin.key') }}"
  become:           true
  
- name: Ensures /root/k8s/cephfs dir exists
  file: 
    path:                   "{{ item }}"
    state:                  directory
    owner:                  root
    group:                  root
    mode:                   '0755'
  with_items:
  - "/root/k8s"
  - "/root/k8s/cephfs"
  become:                   true
  
- name: Build csi rdb provisioner deployment files
  block:
  - name: create temporary folder
    tempfile:
      state:        directory
      suffix:       csi
    register:       csi_tmp_dir
    changed_when:   false
    
  - name: download ceph-csi deployment files
    get_url:
      url:          "https://raw.githubusercontent.com/ceph/ceph-csi/v{{ ceph_csi_version }}/{{ item }}"
      dest:         "{{ csi_tmp_dir.path }}/{{ item | basename }}.origin"
      force:        true
    with_items:     "{{ ceph_cephfs_csi_files }}"
    changed_when:   false
    
  - name: add namespace to cephfs-csi deployment files
    shell:  |
        awk -v  ns='cephfs-csi'                             \
               'BEGIN {m=0; n=0;}                           \
                {                                           \
                    p=1;                                    \
                    if ( $0 ~ /^metadata:/ ) {              \
                        m=1; n=0;                           \
                    }                                       \
                    else if (m && $0 ~ /^[^ ]/ ) {          \
                        if (m && !n) {                      \
                            print "  namespace:",ns;        \
                        }                                   \
                        m=0; n=0;                           \
                    }                                       \
                    if ( $0 ~ /^  namespace:/ ) {           \
                        print "  namespace:",ns;            \
                        p=0; n=1;                           \
                    } else if ($0 ~ /^    namespace:/ ) {   \
                        print "    namespace:",ns;          \
                        p=0;                                \
                    }                                       \
                }p;                                         \
                END {                                       \
                    if (m && !n) {                          \
                        print "  namespace:",ns;            \
                    }                                       \
                }' {{ csi_tmp_dir.path }}/{{ item | basename }}.origin > {{ csi_tmp_dir.path }}/{{ item | basename }}
    with_items:     "{{ ceph_cephfs_csi_files }}"
    changed_when:   false
    
  - name: update container image to 2 replicas if needed
    replace:
      path:         "{{ csi_tmp_dir.path }}/{{ item | basename }}"
      regexp:       "replicas: [0-9]+"
      replace:      "replicas: {{ groups['worker'] | length }}"
    with_items:     "{{ ceph_cephfs_csi_files }}"
    when:           groups['worker'] | length < 3 
    changed_when:   false
    
  - name: copy ceph-csi cephfs deployment files
    copy:
      remote_src:   yes
      src:          "{{ csi_tmp_dir.path }}/{{ item | basename }}"
      dest:         "/root/k8s/cephfs/{{ item | basename }}"
      owner:        root
      group:        root
      mode:         '0644'
    with_items:     "{{ ceph_cephfs_csi_files }}"
    
  always:
  - name: delete temporary build directory
    file:
      path:         "{{ csi_tmp_dir.path }}"
      state:        absent
    when:           csi_tmp_dir is defined
    changed_when:   false
  
  become:           true
  
- name: Generate ceph-csi storage class file
  template:
    src:            "k8s-csi-cephfs-storage-class.yml.j2"
    dest:           "/root/k8s/cephfs/k8s-csi-cephfs-storage-class.yml"
  become:           true
  
- name: apply ceph-csi cephfs storage class deployment file
  shell:            "kubectl apply -f '/root/k8s/cephfs/k8s-csi-cephfs-storage-class.yml'"
  become:           true
  
- name: apply ceph-csi cephfs deployment files
  shell:            "kubectl apply -f '/root/k8s/cephfs/{{ item | basename }}'"
  with_items:       "{{ ceph_cephfs_csi_files }}"
  become:           true
  