---
apiVersion:         v1
kind:               Namespace
metadata:
  name:             dockerhub
---
kind:               PersistentVolumeClaim
apiVersion:         v1
metadata:
  name:             dockerhub-rdb-claim
  namespace:        dockerhub
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: csi-rbd-sc
  resources:
    requests:
      storage:      {{ docker_registry.size }}
---
apiVersion:         apps/v1
kind:               Deployment
metadata:
  name:             dockerhub
  namespace:        dockerhub
spec:
  selector:
    matchLabels:
      app:          dockerhub
  replicas:         1
  strategy:
    type:           Recreate
  template:
    metadata:
      labels:
        app:        dockerhub
    spec:
      containers:
      - name:       dockerhub
        image:      registry:2
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path:       /v2/
            port:       5000
          initialDelaySeconds: 3
          periodSeconds:        3
        volumeMounts:
        - mountPath:    /var/lib/registry
          name:         dockerhub-data
      volumes:
      - name:           dockerhub-data
        persistentVolumeClaim:
          claimName:    dockerhub-rdb-claim
---
apiVersion:         v1
kind:               Service
metadata:
  name:             dockerhub-service
  namespace:        dockerhub
spec:
  ports:
  - name:           http
    targetPort:     5000
    port:           5000
  selector:
    app:            dockerhub
---
apiVersion:         extensions/v1beta1
kind:               Ingress
metadata:
  name:             registry-ingress
  namespace:        dockerhub
  annotations:
    kubernetes.io/ingress.class:                    nginx
    ingress.kubernetes.io/ssl-passthrough:          "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size:    "0" 
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600" 
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600" 
spec:
  tls:
  - hosts:
    - {{ dockerhub_url }}
    secretName:     tlssecret
  rules:
  - http:
      paths:
        - path: /
          backend:
            serviceName: dockerhub-service
            servicePort: 5000
---