---
- name: Install dependencies packages
  apt:
    name:  "{{ packages }}"
    state:  present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - gnupg-agent
    - software-properties-common
    - conntrack
    - ebtables
    - ethtool
    - socat
  become: true
  
- name: Add an apt signing key for Docker
  apt_key:
    url:   "https://download.docker.com/linux/{{ docker.repository.dist }}/gpg"
    state: present
  become: true
  
- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch={{ docker.repository.deb_arch }}] https://download.docker.com/linux/{{ docker.repository.dist }} {{ docker.repository.version }} {{ docker.repository.channel }}
    state: present
  become: true
  
- name: Install docker and its dependencies
  apt: 
    name: "docker-ce"
    state: present
    update_cache: yes
    install_recommends: no
  notify:
    - docker status
  become: true
  
- name: Ensures /etc/docker dir exists
  file: 
    path:  /etc/docker
    state: directory
  become: true
  
- name: Copy docker daemon.json on server to /etc/docker
  template:
    src:   docker-daemon.j2
    dest:  /etc/docker/daemon.json
    owner: root
    group: docker
    mode: '0644'
  register: daemon
  become: true
  
- name: restart service docker
  systemd:
    state: restarted
    daemon_reload: yes
    name:  docker
  when: daemon.changed
  notify:
  - docker status
  become: true
  
- name: Determine available groups
  getent:
    database: passwd
  register:   users
  
- name: set docker group
  user:
    name: '{{ item }}'
    groups: docker
    append: yes
  when: item in users
  with_items: "{{ docker.users }}"
  become: true
  
- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state:  absent
  with_items:
    - swap
    - none
  become: true
  
- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0
  become: true
  
- name: use iptables-legacy
  alternatives:
    name: "{{ item }}"
    path: "/usr/sbin/{{ item }}-legacy"
  with_items:
  - "iptables"
  - "ip6tables"
  - "ebtables"
  register: iptables_legacy
  become: true
  
- name: set net.bridge.bridge-nf-call-iptables to 1
  sysctl:
    name:  net.bridge.bridge-nf-call-iptables
    value: "1"
    state: present
  register: disable_sysctl
  become: true
  
- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become: true
  
- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ {{ k8s.repository.version }} {{ k8s.repository.channel }}
    state: present
    filename: kubernetes.list
  become: true
  
- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - cri-tools
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni
  notify:
  - kubelet status
  become: true
  
- name: Configure default kubelet ip
  lineinfile:
    path:   "/etc/default/kubelet"
    line:   "KUBELET_EXTRA_ARGS='--node-ip={{ ansible_default_ipv4.address }} --cgroup-driver={{ docker.cgroupdriver }}'"
    create: yes
  register: kubelet_default
  become: true
  
- name: restart service kubelet
  systemd:
    state: restarted
    daemon_reload: yes
    name:  kubelet
  when: kubelet_default.changed
  notify:
  - kubelet status
  become: true
  