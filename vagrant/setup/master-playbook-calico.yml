---
- hosts: 
  - "{{ node_name }}"
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - tree
      - dnsutils

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Ensures /etc/docker dir exists
    file: 
      path:  /etc/docker
      state: directory

  - name: Copy docker daemon.json on server to /etc/docker
    copy: 
      src:  docker-daemon.json
      dest: /etc/docker/daemon.json
      mode: 0644
    register: daemon
  
  - name: restart service docker
    systemd:
      state: restarted
      daemon_reload: yes
      name:  docker
    when: daemon.changed
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Set default value for plugin
    set_fact:  
      plugin: "calico"
    when: plugin|length < 1

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
  
  - name: use iptables-legacy for calico only
    alternatives:
      name: iptables 
      path: /usr/sbin/iptables-legacy
    when: plugin == "calico"
    
  - name:
    sysctl:
      name:  net.bridge.bridge-nf-call-iptables
      value: 1
      state: present
    when: plugin == "flannel" or plugin == "weave"

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl
        - kubernetes-cni

  - name: Configure node ip
    lineinfile:
      path:   "/etc/default/kubelet"
      line:   "KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: set pod-network-cidr arg
    setFact:
      pod_network_cidr_arg: "{% if plugin=='calico' %}--pod-network-cidr=\"192.168.0.0/16\"{% elif plugin=='flannel'%}--pod-network-cidr=\"10.244.0.0/16\"{% endif %}"
    
  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="{{ node_ip }}" --node-name "{{ node_name }}" --token="{{ k8s_token }}" {{ pod_network_cidr_arg }}
    
  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install calico pod network
    command: kubectl create -f "https://docs.projectcalico.org/v3.9/manifests/calico.yaml"
    when:    plugin == "calico"

  - name: Install calico pod network
    command: kubectl create -f "https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml"
    when:    plugin == "flannel"

  - name: Install calico pod network
    command: kubectl create -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.WEAVE_MTU=8912"
    when:    plugin == "weave"

  handlers:
    - name: docker status
      service: 
        name:  docker
        state: started
