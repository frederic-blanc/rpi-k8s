---
- hosts: 
  - "{{ node_name }}"
  become: true
  
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - tree
      - dnsutils
      - conntrack
      - ebtables
      - ethtool
      - socat
  
  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present
  
  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
      state: present
  
  - name: Install docker and its dependencies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status
  
  - name: Ensures /etc/docker dir exists
    file: 
      path:  /etc/docker
      state: directory
  
  - name: Copy docker daemon.json on server to /etc/docker
    copy: 
      src:  docker-daemon.json
      dest: /etc/docker/daemon.json
      mode: 0644
    register: daemon
  
  - name: restart service docker
    systemd:
      state: restarted
      daemon_reload: yes
      name:  docker
    when: daemon.changed
    notify:
    - docker status
  
  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker
  
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none
  
  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
  
  - name: use iptables-legacy
    alternatives:
      name: "{{ item }}"
      path: "/usr/sbin/{{ item }}-legacy"
    with_items:
    - "iptables"
    - "ip6tables"
    - "ebtables"
    register: iptables_legacy
  
  - name: set net.bridge.bridge-nf-call-iptables to 1
    sysctl:
      name:  net.bridge.bridge-nf-call-iptables
      value: 1
      state: present
    register: disable_sysctl
  
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
  
  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
  
  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - cri-tools
        - kubelet
        - kubeadm
        - kubectl
        - kubernetes-cni
    notify:
    - kubelet status
  
  - name: Configure default kubelet ip
    lineinfile:
      path:   "/etc/default/kubelet"
      line:   "KUBELET_EXTRA_ARGS='--node-ip={{ node_ip }} --cgroup-driver=cgroupfs'"
      create: yes
    register: kubelet_default
  
  handlers:
    - name: docker status
      service: 
        name:  docker
        state: started
    - name: kubelet status
      service: 
        name:  kubelet
        state: started
  