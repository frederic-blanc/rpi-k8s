IMAGE_NAME  = "debian/buster64"
#IMAGE_NAME = "bento/ubuntu-16.04"

N = 2

Vagrant.configure("2") do |config|
    config.ssh.insert_key = false

    config.vm.provider "virtualbox" do |v|
        v.memory = 2048
        v.cpus = 2
    end
      
    config.vm.define "k8s-master" do |master|
        master.vm.box = IMAGE_NAME
        master.vm.network  "private_network", ip: "192.168.50.10"
        master.vm.hostname = "k8s-master"
        
        master.vm.provision "ansible_local" do |ansible|
            ansible.playbook = "setup/k8s-dependencies.yml"
            ansible.extra_vars = {
                node_ip:   "192.168.50.10",
                node_name: "k8s-master"
            }
        end
        
        master.vm.provision "ansible_local" do |ansible|
            ansible.playbook = "setup/k8s-create-master.yml"
            ansible.extra_vars = {
                node_ip:   "192.168.50.10",
                node_name: "k8s-master",
                k8s_token: "b45k8x.khrbeiq3x5ebqju1",
                plugin:    "calico"
            }
        end
    end

    (1..N).each do |i|
        config.vm.define "k8s-node-#{i}" do |node|
            node.vm.box = IMAGE_NAME
            node.vm.network "private_network", ip: "192.168.50.#{i + 10}"
            node.vm.hostname = "k8s-node-#{i}"
            
            node.vm.provision "ansible_local" do |ansible|
                ansible.playbook = "setup/k8s-dependencies.yml"
                ansible.extra_vars = {
                    node_ip:   "192.168.50.#{i + 10}",
                    node_name: "k8s-node-#{i}"
                }
            end
        
            node.vm.provision "ansible_local" do |ansible|
                ansible.playbook = "setup/k8s-attach-node.yml"
                ansible.extra_vars = {
                    master_ip: "192.168.50.10",
                    node_ip:   "192.168.50.#{i + 10}",
                    node_name: "k8s-node-#{i}",
                    k8s_token: "b45k8x.khrbeiq3x5ebqju1",
                    plugin:    "calico"
                }
            end
        end
    end
end
